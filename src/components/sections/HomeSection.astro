---
import ParticlesBackground from '@/components/ParticlesBackground.astro';
---

<section id="home">
  <ParticlesBackground />
  <div class="content">
    <div class="two-column-layout">
      <div class="left-column">
        <h1 class="intro-text">
          Hello, my name is Rudy, and I'm <span id="article">a</span> <span id="typed-text"></span><span class="cursor">|</span>
        </h1>
      </div>
      <div class="right-column">
        <!-- Terminal will go here later -->
      </div>
    </div>
  </div>
</section>

<style>
  section {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    min-height: 110vh;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .content {
    position: relative;
    z-index: 10;
    width: 100%;
    max-width: 1400px;
    padding: 0 2rem;
  }

  .two-column-layout {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    margin-top: -8rem;
    margin-left: -10rem;
  }

  .left-column {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .intro-text {
    font-size: 3rem;
    font-weight: 700;
    color: white;
    line-height: 1.3;
    margin: 0;
  }

  #typed-text {
    color: rgb(153, 82, 228);
    font-weight: 700;
  }

  .cursor {
    color: rgb(153, 82, 228);
    animation: blink 1s step-end infinite;
    font-weight: 400;
  }

  @keyframes blink {
    0%, 50% {
      opacity: 1;
    }
    51%, 100% {
      opacity: 0;
    }
  }

  @media (max-width: 1024px) {
    .two-column-layout {
      grid-template-columns: 1fr;
      gap: 2rem;
    }

    .intro-text {
      font-size: 2.5rem;
    }
  }

  @media (max-width: 768px) {
    .intro-text {
      font-size: 2rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const typedTextElement = document.getElementById('typed-text');
    const articleElement = document.getElementById('article');
    if (!typedTextElement || !articleElement) return;

    const words = [
      'Integration Engineer',
      'Full-Stack Developer',
      'AI Systems Architect',
      'Project Lead',
      'Computer Scientist',
      'Problem Solver',
      'The Best Candidate'
    ];

    let wordIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    let typingSpeed = 60;

    function getArticle(word: string): string {
      // No article for words starting with "The"
      if (word.toLowerCase().startsWith('the')) {
        return '';
      }
      const vowels = ['a', 'e', 'i', 'o', 'u'];
      return vowels.includes(word[0].toLowerCase()) ? 'an' : 'a';
    }

    function updateArticle() {
      const currentWord = words[wordIndex];
      articleElement.textContent = getArticle(currentWord);
    }

    function type() {
      const currentWord = words[wordIndex];

      if (isDeleting) {
        // Delete characters
        typedTextElement.textContent = currentWord.substring(0, charIndex - 1);
        charIndex--;
        typingSpeed = 30; // Faster deletion
      } else {
        // Type characters
        typedTextElement.textContent = currentWord.substring(0, charIndex + 1);
        charIndex++;
        typingSpeed = 60; // Normal typing speed
      }

      // Check if word is complete
      if (!isDeleting && charIndex === currentWord.length) {
        // Pause at end of word
        typingSpeed = 2000;
        isDeleting = true;
      } else if (isDeleting && charIndex === 0) {
        // Move to next word
        isDeleting = false;
        wordIndex = (wordIndex + 1) % words.length;
        updateArticle(); // Update article for new word
        typingSpeed = 500; // Pause before typing next word
      }

      setTimeout(type, typingSpeed);
    }

    // Initialize with correct article
    updateArticle();
    // Start typing animation
    type();
  });
</script>

