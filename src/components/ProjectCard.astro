---
import type { Project } from '@/types/project';

interface Props {
  project: Project;
}

const { project } = Astro.props;
const progressPercent = project.progress ?? 100;
const progressLabel = progressPercent === 100 ? 'Completed' : `${progressPercent}%`;
---

<div class="project-card" data-cursor-glow>
  <div class="cursor-glow"></div>
  <div class="project-image">
    {project.image ? (
      <img src={project.image} alt={project.title} />
    ) : (
      <div class="image-placeholder"></div>
    )}
  </div>
  
  <div class="project-content">
    <h3 class="project-title">{project.title}</h3>
    <p class="project-description">{project.description}</p>
    
    {project.tags && project.tags.length > 0 && (
      <div class="project-tags">
        {project.tags.map((tag) => (
          <span class="tag">{tag}</span>
        ))}
      </div>
    )}
  </div>

  <div class="project-hover-overlay">
    <div class="progress-section">
      <div class="progress-label">Progress: {progressLabel}</div>
      <div class="progress-bar">
        <div class="progress-fill" style={`width: ${progressPercent}%`}></div>
      </div>
    </div>
    
    <div class="project-links">
      {project.link && (
        <a href={project.link} target="_blank" rel="noopener noreferrer" class="project-link">
          View Project
        </a>
      )}
      {project.github && (
        <a href={project.github} target="_blank" rel="noopener noreferrer" class="project-link">
          GitHub
        </a>
      )}
    </div>
  </div>
</div>

<style>
  .project-card {
    background-color: #1a1a1a;
    border: 1px solid #333;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.3s ease, border-color 0.3s ease;
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
  }

  .project-card:hover {
    transform: translateY(-4px);
    border-color: #666;
    box-shadow: 0 10px 30px rgba(255, 255, 255, 0.3);
  }

  .project-image {
    width: 100%;
    height: 250px;
    overflow: hidden;
    background-color: #0a0a0a;
    flex-shrink: 0;
  }

  .project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .image-placeholder {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);
  }

  .project-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex: 1;
  }

  .project-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin: 0;
    color: white;
  }

  .project-description {
    color: #ccc;
    line-height: 1.6;
    margin: 0;
    flex: 1;
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background-color: #2a2a2a;
    color: #aaa;
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    font-size: 0.875rem;
    border: 1px solid #444;
  }

  .project-hover-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.95) 0%, rgba(0, 0, 0, 0.9) 100%);
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.3s ease, transform 0.3s ease;
    pointer-events: none;
  }

  .project-card:hover .project-hover-overlay {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
  }

  .progress-section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .progress-label {
    color: white;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .progress-bar {
    width: 100%;
    height: 8px;
    background-color: #2a2a2a;
    border-radius: 4px;
    overflow: hidden;
  }

  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, #4a9eff 0%, #6eb5ff 100%);
    transition: width 0.3s ease;
  }

  .project-links {
    display: flex;
    gap: 1rem;
  }

  .project-link {
    color: white;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border: 1px solid #666;
    border-radius: 4px;
    transition: background-color 0.3s ease, border-color 0.3s ease;
    font-size: 0.875rem;
    flex: 1;
    text-align: center;
  }

  .project-link:hover {
    background-color: #2a2a2a;
    border-color: white;
  }

  .cursor-glow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
    z-index: 1;
  }

  .project-card:hover .cursor-glow {
    opacity: 1;
  }

  .project-image,
  .project-content,
  .project-hover-overlay {
    position: relative;
    z-index: 2;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('[data-cursor-glow]');
    
    cards.forEach((card) => {
      const glowElement = card.querySelector('.cursor-glow');
      
      card.addEventListener('mousemove', (e) => {
        const rect = card.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        
        glowElement.style.background = `radial-gradient(circle 200px at ${x}px ${y}px, rgba(255, 255, 255, 0.15), transparent)`;
      });
      
      card.addEventListener('mouseleave', () => {
        glowElement.style.background = '';
      });
    });
  });
</script>

